<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.4 (Ruby 3.0.2) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-fondevik-mls-pairedmls-00" category="info" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.18.2 -->
  <front>
    <title abbrev="PMLS">Paired MLS - PCS in Limited Modes</title>
    <seriesInfo name="Internet-Draft" value="draft-fondevik-mls-pairedmls-00"/>
    <author initials="E." surname="Fondevik" fullname="Elsie Fondevik">
      <organization>Kongsberg Defense &amp; Aerospace</organization>
      <address>
        <email>elsie.fondevik@kongsberg.com</email>
      </address>
    </author>
    <author initials="B." surname="Hale" fullname="Britta Hale">
      <organization>Naval Postgraduate School</organization>
      <address>
        <email>britta.hale@nps.edu</email>
      </address>
    </author>
    <author initials="X." surname="Tian" fullname="Xisen Tian">
      <organization>Naval Postgraduate School</organization>
      <address>
        <email>xisen.tian1@nps.edu</email>
      </address>
    </author>
    <date year="2023" month="December" day="13"/>
    <area>Security</area>
    <workgroup>MLS</workgroup>
    <keyword>security</keyword>
    <keyword>authenticated key exchange</keyword>
    <keyword>PCS</keyword>
    <abstract>
      <?line 46?>
<t>This document describes the Paired Messaging Layer Security (MLS) extension that improves Post Compromise Security for devices that are unable to self-update using a trusted paired device.</t>
      <!-- TODOs
 - Specify the format of the notification message.
 - Add context on how to efficiently terminate Paired MLS 
 - How to more efficiently terminate PairedMLS without relying on being re-added to the group. Is there a way to self-remove and then self-add? (think this can be todo for later)
- Add token passing option 

NOTES from ESM
- In terminology passive/active device seems to refer to the original owner (in case of leaf node) instigator, or initiator otherwise. should it really be possible to change roles? I agree that online/offline should be changable but not ownership

- In 3. Extension... devices are said to be paired after randomness is negotiated, what about signature keys for specific node?
-->



    </abstract>
  </front>
  <middle>
    <?line 62?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>Paired MLS allows a trusted device to update the security parameters of another group member. The trusted paired device can be added to the group or can be another existing group member. The Paired MLS extension builds upon MLS (see [1]). This document presents two operational modes for the Paired MLS_ extension; interested readers can learn about other cases that were evaluated at [FHX23].</t>
      <t>The Paired MLS extension describes a standard case where each device possesses its own signature key. To enable the standard Paired MLS extension, the MLS anchor node must accommodate being shared by at least two devices. If the anchor node is an MLS leaf node, this means that the leaf node would store at least two sets of signature keys. 
An additional operational mode is described, <em>Hidden</em> mode, where the paired devices share a signing key and the paired device is able to issue digital signatures on behalf of the partner device in addition to PCS updates. Caveats to Hidden mode are discussed further under Security Considerations.</t>
    </section>
    <section anchor="about-this-document">
      <name>About This Document</name>
      <t>This note is to be removed before publishing as an RFC.</t>
      <t>Status information for this document may be found at <em>[Todo]</em>.</t>
      <t>Discussion of this document takes place on the MLS Working Group mailing list (mailto:mls@ietf.org), which is archived at https://mailarchive.ietf.org/arch/browse/mls/.  Subscribe at https://www.ietf.org/mailman/listinfo/mls/.</t>
      <t>Source for this draft and an issue tracker can be found at https://github.com/PairedMLS/draft-pairedMLS.</t>
    </section>
    <section anchor="status-of-this-memo">
      <name>Status of this Memo</name>
      <t>This Internet-Draft is submitted in full conformance with the provisions of BCP 78 and BCP 79.</t>
      <t>Internet-Drafts are working documents of the Internet Engineering Task Force (IETF).  Note that other groups may also distribute  working documents as Internet-Drafts.  The list of current Internet-Drafts is at https://datatracker.ietf.org/drafts/current/.</t>
      <t>Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time.  It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress."</t>
      <t>This Internet-Draft will expire on XX May 2024.</t>
    </section>
    <section anchor="copyright-notice">
      <name>Copyright Notice</name>
      <t>Copyright (c) 2023 IETF Trust and the persons identified as the document authors.  All rights reserved.</t>
      <t>This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.  Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, [RFC2119], and [RFC8174] when, and only when, they appear in all capitals, as shown here.</t>
      <t>The terms MLS client, MLS member, MLS group, Leaf Node, GroupContext, KeyPackage, Signature Key, Handshake Message, Private Message, Public Message, and RequiredCapabilities have the same meanings as in the [MLS protocol] <eref target="https://www.rfc-editor.org/rfc/rfc9420.html">https://www.rfc-editor.org/rfc/rfc9420.html</eref>.</t>
      <t>Generally, Paired MLS involves two paired devices, where one device can perform PCS updates in an MLS group on behalf of the other device. Without loss of generality, we define the one performing updates as the active device and the device not performing the update as the passive device:</t>
      <t><em>Passive Device</em>: A passive device is a user equipment device that is not issuing updates for a given period. Such a device may operate in receive-only mode or in another limited fashion such that sending regular keying updates is impractical or even impossible. A passive device may be offline or online, i.e., if the passive device is online it can receive application and group management messages, but is restricted from issuing updates.</t>
      <t><em>Active Device</em>: An active device is another user equipment device designated that is able to issue updates during the given period.</t>
      <t>A passive device may be pre-paired with an active device such that the active device can issue updates on behalf of the paired passive device. The active device's updates enable a passive device to PCS heal after a compromise for improved post-compromise security. Paired devices may switch roles between active and passive. Also a device may be paired with multiple others, such that it can issue updates on behalf of several paired passive devices.</t>
      <t><em>Anchor</em>:  The MLS node that acts as a shared access node between the paired and passive device is called an anchor. The anchor can be a leaf node of a group member, where the paired devices both have access to the leaf node information but our nominally outside of the MLS tree. The anchor can also be a shared intermediate node on the path to the root of an MLS tree, and as such the the anchor may be shared with multiple only MLS members in addition to the paired devices. Any MLS members that share the anchor node in their parent tree MUST be paired.</t>
      <!-- 
_passive Device Operational Modes_
An passive device has two modes of operation. Before an passive device enters a new state the MLS delivery service (DS), which facilitates group state consensus by ensuring in-order delivery of MLS messages, must be informed. The operational states are:
* _Online mode_: The passive device is available and running the group protocol as per specification. In this state it does not have need of a active device.
* _Limited mode_: The passive device has the ability to receive application messages and key update messages, but it may not preform its own key updates. Depending on environ- mental situation, an passive device may still be allowed to send application messages while in this mode. In this state, the active device may send updates on behalf of the passive device.

_Active Operational Modes_
The active device may be in one of two modes as well, contingent on the mode of the passive.
* _Offline mode_: When an passive device is online the active device may be set to be inactive.
* _Online mode_: When the passive device enters limited mode, it becomes reliant on a active device. Therefore the active device status must be set to online in order to send key updates.
-->

<t><em>Shared Randomness</em>: In order for one device to perform cryptographic updates on behalf of another, they must share a source of randomness that is kept in secure storage. This is in addition to each of the devices' own randomness source. In cryptographic analysis terms, such shared randomness must be stored with similar protections as signature keys in order to not be assumed as compromised in the event of other state compromise. Practically, this is accomplished by sharing a seed for pseudorandom number generation between the two. This random seed IS RECOMMENDED be shared via secure hardware or sharing MAY be bootstrapped over a 1-to-1 channel, where the added MLS PCS guarantees from this draft are contingent on the security of the 1-to-1 channel. 
Readers are encouraged to see [FHX23] for security tradeoff analysis.</t>
      <!--{::boilerplate bcp14-tagged}-->

<!--

- Puncturable SOMETHING (PRF) approach: Alice and Bob are going to share randomness. Alice shares update to Group but not to Bob. Alice shares puncturable information to Bob so he can roll key forward. How do we send a message to Bob to have him update the key without an adversary being able to do the same?

The idea that the puncturable *something* can't be replayed.. 

- The shared randomness can be preinstalled or in a secure channel, but we assume the adversary does not compromise this initial establishment. 

- Chnage nomenclature to not have edge or guardian mentions. Use user-tree POV instead (e.g. user device A user device B).

- If Alice and Bob not paired you do a standard KEM update to share the randomness with Bob. If they are paired, you'll have to find a different way (via the puncturable PRF msg) to signal to Bob to update their state. It needs be formatted properly for the DS to handle (check proposal, commit, and update message structure looks for a peer). It needs to look like how a KEM would (i.e. appear random). 
-->

</section>
    <section anchor="extension-execution">
      <name>Extension Execution</name>
      <!-- Paired MLS is an extension of MLS, as found in [1], per user, i.e. per MLS leaf node. Meaning that each MLS leaf node itself MAY decide whether it wishes to run the extension. This extension comes in two variantions, one where all group members are aware that an MLS node uses the extension and one where the usage is opaque to the remaining MLS group members.   
-->

<t>The extension assumes the use of the MLS protocol where the device that desires to execute the extension is already an MLS group member and thus has access to an MLS leaf node. The group member initiating this extension MUST first negotiate the shared randomness with the device it will pair with: this SHOULD be done via secure hardware and MAY be done through an out-of-band, 1-to-1 channel. This extension assumes that the randomness is stored securely, similarly to signature private keys.</t>
      <t>Signature key management determines whether the extension is used in standard mode or with hidden mode. 
In standard mode, both of the paired devices must have their own signing keys, distinct from the anchor. This is the case whether the paired devices are both MLS group members with their distinct leaf nodes, or if the anchor node is an MLS group member leaf node. In the latter case, the extension would require the ability to associate multiple signature public keys to a leaf node. 
In hidden mode, the paired devices may use the anchor's signing key, thus obfuscating the actions of the individual devices. The private signing key MAY be shared among the paired devices offline or out-of-band.</t>
      <t>After sharing randomness and establishing an anchor node, the devices are considered "paired" and either device may update on the other's behalf. When the active device issues an update to the group on behalf of the passive device, it will also issue a <em>Notify</em> notification message to the passive device to ratchet forward its group key using the shared randomness. This ensures that the passive device stays synchronized with the group epoch so it can process updates and commits made by other group members. This notification message is sent in place of a normal update to the paired device, i.e., such that the <em>Notify</em> message does not contain secret keying material. Since, unlike the update message the <em>Notify</em> does not contain information about the key update, an adversary that has compromised the passive device and tries to decrypt the message learns nothing about the new epoch state, achieving PCS for the passive device. 
The <em>Notify</em> notification message is formatted similarly to an update message, such that the distinction between the two is opaque to the DS.</t>
      <!--
Important; once a device has initiated the use of Paired MLS mode, the original MLS commands become obsolete for the specified MLS leaf node, instead the following commands take precedence. 

* enterPairing
* exitPairing
* removePair
* updatePairing
-->

<t>Messages transmitted in the Paired MLS extension are those inherited from MLS [1] with the following changes:
<!--Messages generated by running one of the specified commands are either transmitted between the paired devices or onto the MLS group. The transmitted messages either take the form inherited from MLS or one of the following. -->
      </t>
      <!--* An __Update__ message is inherited from MLS but with the additional potential of being executed on another paired devices behalf. If the action is preformed on another instances behalf a __Notification__ message is transmitted as well.
* -->
<ul spacing="normal">
        <li>
          <t>If an <strong>Update</strong> message is sent by A, such that A is an active device and is sending an update on behalf of B, then A computes the update as in MLS except for the KEM to B. Instead of the KEM for B, A computes the <em>Notify</em> message.
&lt;!--</t>
        </li>
        <li>
          <t>A <strong>CeasePair</strong> message is sent from a paired device to its paired devices with whom the initiating device wishes to discontinue paired MLS extension. The command is followed by a self remove then group addition.</t>
        </li>
      </ul>
      <t/>
      <t>Optionally, if randomness between paired devices is transmitted online the following commands are additionally utilized:
* A <em>ShareRand</em> message is sent to negotiate the shared randomness between pairing devices. 
* A <em>InitPairing</em> message notifies the recipient about devices that wish to pair. The message contains the identities of the pairing devices and a flag for standard or hidden mode operation. If hidden mode is set, the message MUST be sent directly to the target device in a secure 1-to-1 chanel and MUST contain the signature key pair of the anchor leaf node. If standard mode is set, the recipient MUST be the  directory, and the directory will associate the public signatures of the requesting devices to the anchor node of the initiating device.
* An <em>Accept</em> message is sent back to the initiator to confirm successful paring. This means that both devices have shared randomness and that signing keys have been provisioned accordingly. 
--&gt;</t>
      <!-- * A _Toggle_ message is sent between paired devices to determine who is resposible for MLS updates. -->
<!-- * _ACK_ messages are returned by the paired device to signify command has been recieved and accepted. __[ToDo]__ dont think this is needed.-->
<t><strong>[TODO]</strong> Add context on pairing remove messages (if these are allowed to be transparent to the group)
MLS commands such as Remove, GroupInfo KeyPackage and Welcome take the form and are processed as according to [1].</t>
      <section anchor="issuing-a-paired-update">
        <name>Issuing a Paired Update</name>
        <t>Once A and B have been paired, active device A can issue an update on behalf of passive device B. A sends the update to the rest of the MLS group as a normal commit. From the perspective of other MLS group members this update will be indistinguishable from any other MLS update preformed by A. Furthermore, in hidden mode, updates by the paired devices A or B will appear to come from the anchor, due to the shared signing key. 
A will send the <em>Notify</em> message to B, where <em>Notify</em> is indistinguishable to other group members from a commit message to B. The <em>Notify</em> message signals to B how it should use the shared randomness to derive the necessary update for the new group key in order to stay in sync with the new group epoch.</t>
        <artwork><![CDATA[
                                                                Group
A            B              G1  ...    Gn         Directory     Channel
|Update(B)   |              |          |              |           |
|Commit(Upd) |              |          |              |           |
|Notify(B)   |              |          |              |           |
+----------------------------------------------------------------->
|            |              |          |              |           |
|            |              |          |              |Commit(Upd)|
|            |              |          |              |Update(B)  |
<-----------------------------------------------------------------+
|            |              <----------+--------------+-----------+
|            |              |          <--------------+-----------+
|            |              |          |              |Commit(Upd)|
|            |              |          |              |Notify(B)  |
|            <--------------+----------+--------------+-----------+
|            |              |          |              |           |
]]></artwork>
        <t><strong>Figure 1</strong> Active device A updates with a commit on behalf of B to the group. The commit message is process as in MLS for all members (A, B, G1, ..., Gn). The Update message is processed as in MLS, but with the change that the update for B is computed as a notify message instead. The notify message is formatted the same as a commit message form the view of the DS. 
Remaining MLS group members, which are labeled G1, ..., Gn, will receive the standard update messages from the DS.</t>
        <t>If any other MLS group member sends proposals or commits to the paired devices the process will follow the flow as defined in RFC9420 [1].</t>
        <section anchor="termination-of-pairing">
          <name>Termination of Pairing</name>
          <t>To end Paired MLS extension, either A or B may issue an out-of-band request to its paired device to cease paring. This request notifies the other device to stop using the shared randomness to update on the other's behalf. In standard mode, pairing termination can be enforced through a self-remove and re-add to the group.<br/>
In hidden mode, an out-of-band cease pairing request can similarly be issued, but enforcing the termination is more challenging since removing either device is opaque to the MLS given the shared signature key. This will be discussed further under Security Considerations. It is possible, however, to enforce termination of the pairing and hidden mode by removing both devices and re-adding under separate signature keys.</t>
          <!--
## 3.2 Shared Random Tape
 **[TODO]** specify how to use a puncturable PRF to ensure the notification to ratchet the key can't be replayed or forged by an adversary. Since the devices share a random tape, their key derivation function will yield the same pseudorandom keys. 
-->

</section>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The goal of the MLS extension is to reduce the PCS security risk in cases when group members are unable to update, or updates are seldom. The extension allows other MLS group member devices, or other additional devicses belonging to the same user to update on the passive device's behalf. The structure of a shared anchor node in the MLS tree and various devices under that in a subtree can be attractive for practical operational reasons, and the hidden mode could further allow a user to have multiple devices listed under their user identity leaf node; however there are security caveats to exploiting such structures and we will summarize trade-offs here.</t>
      <section anchor="transport-security">
        <name>Transport Security</name>
        <t>Recommendations for preventing denial of service (DoS) attacks, or restricting transmitted messages are inherited from MLS. Furthermore, message integrity and confidentiality is, as for MLS, protected. 
&lt;!--
An adversary that can observe network traffic will be able to discern group membership. The MLS packets for the extension are designed to be indistinguishable from regular MLS packets for anyone but the paired devices. As such, a network observer should not be able to determine which devices are paired based solely on packet analysis, however, since paired devices communicate using a separate channel, a network observer might be able to discern general communication from pairing by observing timing and frequency. To prevent the separated communication form leaking information directly, this channel MUST be encrypted. We RECOMMEND using a TLS connection as a minimum.</t>
      </section>
      <section anchor="security-of-shared-randomness">
        <name>4.2 Security of Shared Randomness</name>
        <t>If the shared randomness between paired devices is leaked then any entity in possession of this information will be able to generate the group session key when either of the devices update on behalf of the other. As such, the shared randomness MUST be stored, securely and encrypted on all applicable end devices when not in use. Furthermore, we strongly RECOMMEND that the random seeds are loaded offline through hardware. If this is not possible a secure, and encrypted channel MUST by utilized to negotiate, or distribute the randomness. <br/>
--&gt;</t>
      </section>
      <section anchor="post-compromise-security-and-forward-secrecy">
        <name>Post Compromise Security and Forward Secrecy</name>
        <t>The main goal of the extension is to reduce epoch sizes when a group member is unable to update. A full security analysis pertaining PCS and FS can be found in [FHX23]. If the extension is not utilized or if paired devices are simultaneously unable to update, FS and PCS security is reduced to that of the original underlying MLS protocol. The PCS benefits from active device updates are contingent on how the shared randomness is stored; if the passive device stores the shared randomness in active memory with other MLS state, then the PCS benefits cannot be assumed. Instead, the shared randomness MUST be stored more securely as with the signature private keys. Furthermore, we strongly RECOMMEND that the random seeds are loaded offline through hardware. If this is not possible, then the out-of-band 1-to-1 channel utilized to negotiate or distribute the randomness is critical to the security benefits; compromise of that negotiation or distribution reduces the PCS guarantees to that of RFC4920 [1].</t>
      </section>
      <section anchor="discontinuation-of-pairings">
        <name>Discontinuation of Pairings</name>
        <t><strong>[Todo] currently operating under a single paired device. If multiple all need to be removed and then re-added later.</strong>
Termination of pairing can be signaled as described above; in standard extension mode, if a malicious or unwitting device A ignores the signaling and continues to update on behalf of device B, there is no negative impact on security as B can still issue its own updates using its unique randomness. A can of course disrupt the key schedule if it ignores the signaling to terminate pairing and uses the shared randomness after B deletes it, but this similar as in MLS [1]. For such reasons, it is RECOMMENDED that B maintain the shared randomness after signaling termination of pairing until confirmation has been received from A. This does not affect forward secrecy.</t>
        <t>In hidden mode, where devices share a signature key, termination of pairing requires removal and re-addition of both devices, such that they are registered with separate signature keys. It is not possible to remove only one device, as any removed device will maintain access to the signature private key in the group.</t>
      </section>
      <section anchor="impersonation-to-the-group">
        <name>Impersonation to the Group</name>
        <t>In Paired MLS standard mode, distinct signing keys are used by the main device and its paired device when issuing an update. Impersonation of other MLS group members is therefore not feasible given that the signature public keys are known.</t>
        <t>In hidden mode, a single signing key is used by all paired devices. This could allow one or more paired devices to be opaque to the MLS group, which inhibits the MLS goals of transparency of group membership but supports possible user side goals of limiting tracking (e.g., if Alice possesses multiple devices that are group members). Thus, devices using the Paired MLS extension in hidden mode MUST be associated with the same group membership user identity, i.e., the paired devices may all belong to Alice but they should not belong to separate users Alice and Bob.</t>
        <t>Without the ability to interrogate the delivery service for anonymous hidden pairings, compromised or malicious paired devices may eavesdrop undetected in hidden mode. If a group key is leaked somehow, PCS can be achieved through an update by either of the paired devices. However, if the shared randomness source is compromised on one device, then both devices are irrevocably compromised as the attacker could duplicate generation of the update secrets used on either device. Similarly, the shared signature key in hidden mode means that it is impossible to remove a hidden device member and a hidden member can easily start new groups, impersonating other members; this is similar to signature key compromise in MLS [CHK21]. It is for these reasons that it is required that hidden mode is only used for devices associated with the same MLS user.</t>
      </section>
      <section anchor="visability-of-paired-devices-to-delivery-service">
        <name>Visability of paired devices to Delivery Service</name>
        <t>The detection of the active/passive status of the paired devices to the rest of the group is possible in standard mode, but the detection of pairing is not. Thus other group members may see that device A has updated frequently without knowing that it is on behalf of B.  This is because standard mode uses distinct signature keys for each device to issue signed updates to the group.</t>
        <t><strong>TODO</strong> If there is a consideration that the lack of pairing awareness in the group may result in a devices ejection from the group, it is possible to signal to the group that devices are paired and updates have been performed on behalf of B.</t>
        <t>In hidden mode, the DS is still aware of the devices A and B but may not be aware of the pairing status. The anchoring node's signature key is used by both devices, but whether or not they possess shared randomness to perform updates on the behalf of the other is not known to the DS.</t>
        <!--
# 5. Operational Modes

## 5.1 Standard Mode
In standard mode, pairing is transparent to the the directory and group members. The paired devices share an anchor node which may or may not be a MLS Leaf Node. If both devices are sharing one MLS leaf node as their anchor, the directory will need to associate the signature keys of both devices to that leaf node. Message sending and group operations will be able to be performed by either paired devices but will be distinguishable by the signature on the commit. When terminating Standard Paired MLS, the device wishing to exit pairing will notify the other device which MUST stop using the shared randomness and shared anchor. To ensure this, the exiting device will also issue a self-remove which prevents B from updating their shared anchor node. 
### 5.1.1. Message Content

## 5.2 Hidden Mode 
In hidden mode, pairing is undetectable by the other group members. Through sharing a signature key pair, signed messages to the group would appear to be coming from a single group member instead of unique entities. Traceability of the pair is limited to the MLS Authentication Service (AS) and Delivery Service (DS). Depending on the DS design, the pairing could be detected by the DS to properly deliver messages. In a broadcast/multicast DS design scheme even the DS would be oblivious to the presence of the guardian. 

The ramifications of this Hidden mode include ghost devices that could bypass the AS and DS in joining and participating in a group masquerading as its paired device. Moreover, if one paired device is compromised, then all devices will need to be revoked from the MLS group to regain group security. This is easily done by simply pruning the anchor node shared by the paired members from the ratchet tree. To mitigate the abuse of hidden mode, the anchor node MUST be an end-user. Otherwise, hidden mode abuse can result in sub-group impersonation or ghost users whereas hidden mode is intended for multiple devices owned by the same end-user.
-->

<!-- 
### 5.2.1 Message Content Differentiating from Standard Mode

### 5.2.2 Applicable use cases 
This mode of application is desirable when group members do not want to explicitly inform all other group members that they are unable to update. -->

<!--
### Applicable use cases
This operational mode is applicable when a user wants to explicitly announce that their passive device is in a limited receive-only mode. 


### 5.2.2 Special Security Considerations and Warnings
-->

</section>
    </section>
    <section anchor="extension-requirements-to-mls">
      <name>Extension Requirements to MLS</name>
      <section anchor="leaf-node-contents">
        <name>Leaf Node Contents</name>
        <t>The MLS leaf node will need to support multiple signature keys for the public guardian. The leaf node content is modified by changing <tt>signature_key</tt> to a vector of <tt>SignaturePublicKey</tt>. 
&lt;!--
## 6.2 Shared Randomness Establishment
The security of this extension is based upon the security of the out-of-band channel to used to establish shared randomness. We RECOMMEND the shared-randomness be installed via protected hardware in the same way that long-term signing keys stored such that it is infeasible to be accessed by an adversary. The shared-randomness MAY be shared via a secure 1-to-1 channel such as a key encapsulation mechanism between the devices.</t>
      </section>
      <section anchor="notifications-between-paired-devices">
        <name>6.3  Notifications Between Paired Devices</name>
        <t>The notification message sent to the passive device to forward ratchet its group key must be secured from forgery and replay attacks. If an attacker were able to to prompt either devices to update, then they would fall out-of-sync and be unable to decrypt future group messages.</t>
      </section>
      <section anchor="multiple-signature-keys-per-mls-node">
        <name>6.4 Multiple Signature Keys per MLS NODE</name>
        <t>--&gt;</t>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t><strong>[TODO]</strong> Determine an extension code to use</t>
    </section>
    <section anchor="references">
      <name>References</name>
      <t>[I-D.ietf-mls-protocol]
Barnes, R., Beurdouche, B., Robert, R., Millican, J., Omara, E., and K. Cohn-Gordon. "The Messaging Layer Security (MLS) Protocol". Work in Progress, Internet-Draft, draft-ietf-mls-protocol-20, 27 March 2023. <eref target="https://datatracker.ietf.org/doc/html/draft-ietf-mls-protocol-20">https://datatracker.ietf.org/doc/html/draft-ietf-mls-protocol-20</eref></t>
      <section anchor="normative-references-ie-rfcs">
        <name>Normative References (i.e. RFCs)</name>
        <t>[1] <eref target="https://www.rfc-editor.org/info/rfc9420">https://www.rfc-editor.org/info/rfc9420</eref> "MLS RFC"
[2] <eref target="https://www.rfc-editor.org/info/rfc5246">https://www.rfc-editor.org/info/rfc5246</eref> "TLS RFC"</t>
      </section>
      <section anchor="informational-references">
        <name>Informational References</name>
        <t>[FHX23] E. M. Fondevik, B. Hale, and X. Tian. "Guardianship in Group Key Exchange for Limited Environments". Cryptology ePrint Archive, Paper 2023/1761. 11 November 2023. <eref target="https://eprint.iacr.org/2023/1761">https://eprint.iacr.org/2023/1761</eref></t>
        <t>[CHK21] C. Cremers, B. Hale, K. Kohbrok. "The Complexities of Healing in Secure Group Messaging: Why Cross-Group Effects Matter". USENIX Security Symposium 2021: 1847-1864</t>
        <!--# Appendices -->

</section>
    </section>
    <section numbered="false" anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>## Contributors 
## Authors</t>
    </section>
  </middle>
  <back>






  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA8V9+3fbRpLu7/wrsPY5N7aGpCPHM5kos5nRy7E2fl1L2WSP
j48GJJsURiDARQNSODv7v299VdUvAPLsbPaem31YJIFGd3U9vnp0YTabTdqi
Lc1R9j4vGrPK3ry+zGbZ+9PLrKiy18W2aPFlvTJ2ki8WjbmjK+mayapeVvmW
7ls1+bqdretqZe6K29m2tLMdD4W/vvxyssxbs6mb/RENuK4nk2LXHGVt09n2
+ZdffvPl80nemPwouzTLrina/eTW7O/rZnWUTTKaiHVf40PetTemagsMucro
wsz8srzJq43hn2nSk4lt82p1nZd1RXPb06x3xVH2sa2X08zWTduYtaW/9lv8
8WkyeVx124WhGU0er2jUo+z5l8+/mh0+nx0eTh4v68qaynaWJ2wmj2nxhxOa
3e2mqbvdEYhFQ9yZqjNHk8dZFn1Nn9r9jgZ89BNdX1Sb7Hv8+Ag/bPOiPMp+
+v5P5pd8uyvNfFlv8X3eLG+Ospu23dmjZ8+iH5/99D0PX7Q33SJcIZ/5Atk9
evAz2Y+d+4z7SlqZbcdHfn18dX55NQFp6+aI6VhUtOBH5/PspW7qI/o6y2S7
H52XtjC9n+pmk1fFX/O2qCu65Ie62lii6iY7M2sioMn+T3Zsmtru8qWRO4zQ
wGCwuWOeP926G5kiYS4n8+xVXppkHifEFm0efd+bxNv8Li+z97VtN02+6ogE
2eXypq7LZAILHmV+Q6P8qdrZuVl10XN/nmdXRV4lz/25IJ6Ivv4fPfYXDDJv
aZBD/1j6bzYjJl/YtsmXbTa5uilsRnLWbYnpM5LAZVMsjM1ICLy0GmvzDbjr
db43jZei7Alt/VMSj5bITxOje/I2K7a7pr6jETC97LTGxy3NJNy2rpsMW7Hk
x9AtJJxZV+WL0mRtTdJYrmfdDpKSdRaPzUWUaSrCcXr3PJtM/vBPtJqrd2fv
7IQIerkzy2K958nTU7Y0dr3mT1XdFmvINOa55QWZOW45Xq0yEsGWVpHRTzf1
PeZg1nRxQRQpaTDTbIsKs4m0F259Jddua5r+527A9fckRXXXZo0p91gSPWph
8EdjZvlqRaPSSJgoS/c8u+AdoIHz7D7fe7I0Zku0zUj74OdKvqT7/5g9aW+K
6pa+pe1c5hidblrVTGyIZvN0Iott61u6cZdbJm29Y4pMJm/fkYhma9qr7Pzy
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
RIUvjuUFSdnkvwATnqmUdHkAAA==

-->

</rfc>
